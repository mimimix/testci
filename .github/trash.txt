#      - name: Download artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: go_builder
#          path: /tmp

#      - name: Preparing builder - ${{ matrix.target }}
#        run: |
#          docker build -f ./base.Dockerfile \
#          -t base:${{ matrix.target }} \
#          --target ${{ matrix.target }} \
#          --cache-from type=gha,src=dockerCache \
#          --cache-to type=gha,mode=max,src=dockerCache \
#          .

#
#          -t ${{ github.actor }}/testci-${{ matrix.target }}:latest .
#          --cache-from type=gha,scope=twir-base:${{ matrix.target }} \
#          --cache-to type=gha,mode=max,scope=twir-base:${{ matrix.target }} \
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#      - name: Log in to the Container registry
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#      - name: Build and push Docker image PING
#        uses: docker/build-push-action@v5
#        with:
#          context: apps/pingserver
#          file: apps/pingserver/base.Dockerfile
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}-pingpong
#          labels: ${{ steps.meta.outputs.labels }}


#      - name: Build and push Docker image HI
#        uses: docker/build-push-action@v5
#        with:
#          context: apps/hiserver
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}-hiserver
#          labels: ${{ steps.meta.outputs.labels }}